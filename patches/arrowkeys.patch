--- a/media-layer/core/src/media.c
+++ b/media-layer/core/src/media.c
@@ -145,19 +145,46 @@ static SDLMod glfw_modifier_to_sdl_modifier(int mods) {
     return ret;
 }
 
+// Last Mouse Location
+static double last_mouse_x = 0;
+static double last_mouse_y = 0;
+// Pass Mouse Movement To SDL
+static void glfw_motion(__attribute__((unused)) GLFWwindow *window, double xpos, double ypos);
+
 // Pass Key Presses To SDL
 static void glfw_key(__attribute__((unused)) GLFWwindow *window, int key, int scancode, int action, __attribute__((unused)) int mods) {
     if (is_interactable) {
-        SDL_Event event;
-        int up = action == GLFW_RELEASE;
-        event.type = up ? SDL_KEYUP : SDL_KEYDOWN;
-        event.key.state = up ? SDL_RELEASED : SDL_PRESSED;
-        event.key.keysym.scancode = scancode;
-        event.key.keysym.mod = glfw_modifier_to_sdl_modifier(mods);
-        event.key.keysym.sym = glfw_key_to_sdl_key(key);
-        SDL_PushEvent(&event);
-        if (key == GLFW_KEY_BACKSPACE && !up) {
-            character_event((char) '\b');
+        switch (key) {
+            case GLFW_KEY_DOWN: {
+                glfw_motion(window, last_mouse_x, last_mouse_y + 25);
+                break;
+            }
+            case GLFW_KEY_UP: {
+                glfw_motion(window, last_mouse_x, last_mouse_y - 25);
+                break;
+            }
+            case GLFW_KEY_LEFT: {
+                glfw_motion(window, last_mouse_x - 25, last_mouse_y);
+                break;
+            }
+            case GLFW_KEY_RIGHT: {
+                glfw_motion(window, last_mouse_x + 25, last_mouse_y);
+                break;
+            }
+            default: {
+                SDL_Event event;
+                int up = action == GLFW_RELEASE;
+                event.type = up ? SDL_KEYUP : SDL_KEYDOWN;
+                event.key.state = up ? SDL_RELEASED : SDL_PRESSED;
+                event.key.keysym.scancode = scancode;
+                event.key.keysym.mod = glfw_modifier_to_sdl_modifier(mods);
+                event.key.keysym.sym = glfw_key_to_sdl_key(key);
+                SDL_PushEvent(&event);
+                if (key == GLFW_KEY_BACKSPACE && !up) {
+                    character_event((char) '\b');
+                }
+                break;
+            }
         }
     }
 }
@@ -169,9 +196,6 @@ static void glfw_char(__attribute__((unused)) GLFWwindow *window, unsigned int c
     }
 }
 
-// Last Mouse Location
-static double last_mouse_x = 0;
-static double last_mouse_y = 0;
 // Ignore Relative Cursor Motion
 static int ignore_relative_motion = 0;
