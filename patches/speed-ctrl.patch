diff --git a/VERSION b/VERSION
index 5bc1cc4..9731044 100644
--- a/VERSION
+++ b/VERSION
@@ -1 +1 @@
-2.2.7
+2.2.7-speedhack
diff --git a/media-layer/core/CMakeLists.txt b/media-layer/core/CMakeLists.txt
index bd2f4e7..2e3a28b 100644
--- a/media-layer/core/CMakeLists.txt
+++ b/media-layer/core/CMakeLists.txt
@@ -23,7 +23,7 @@ if(TARGET media-layer-core)
     target_link_libraries(media-layer-core media-layer-headers reborn-headers pthread dl)
     if(NOT MCPI_HEADLESS_MODE)
         # Find GLFW
-        find_package(glfw3 3.3 REQUIRED)
+        find_package(glfw3 3.2 REQUIRED)
         # Find FreeImage
         find_library(FREEIMAGE_LIBRARY NAMES freeimage libfreeimage.so.3 REQUIRED)
         # OpenAL
diff --git a/media-layer/core/src/media.c b/media-layer/core/src/media.c
index d214378..679008d 100644
--- a/media-layer/core/src/media.c
+++ b/media-layer/core/src/media.c
@@ -53,6 +53,10 @@ static SDLKey glfw_key_to_sdl_key(int key) {
             return SDLK_LSHIFT;
         case GLFW_KEY_RIGHT_SHIFT:
             return SDLK_RSHIFT;
+        case GLFW_KEY_LEFT_CONTROL:
+            return SDLK_LCTRL;
+        case GLFW_KEY_RIGHT_CONTROL:
+            return SDLK_RCTRL;
         // Inventory
         case GLFW_KEY_E:
             return SDLK_e;
@@ -360,7 +364,9 @@ static void update_glfw_cursor() {
         // Handle Cursor Lock/Unlock
         if ((new_mode == GLFW_CURSOR_DISABLED && old_mode != GLFW_CURSOR_DISABLED) || (new_mode != GLFW_CURSOR_DISABLED && old_mode == GLFW_CURSOR_DISABLED)) {
             // Use Raw Mouse Motion
+#ifdef GLFW_RAW_MOUSE_MOTION
             glfwSetInputMode(glfw_window, GLFW_RAW_MOUSE_MOTION, new_mode == GLFW_CURSOR_DISABLED ? GLFW_TRUE : GLFW_FALSE);
+#endif
 
             // Reset Last Mouse Position
             ignore_relative_mouse = 1;
diff --git a/media-layer/include/SDL/SDL_keysym.h b/media-layer/include/SDL/SDL_keysym.h
index a489b93..bee4131 100644
--- a/media-layer/include/SDL/SDL_keysym.h
+++ b/media-layer/include/SDL/SDL_keysym.h
@@ -38,7 +38,9 @@ typedef enum {
     SDLK_F11 = 292,
     SDLK_F12 = 293,
     SDLK_RSHIFT = 303,
-    SDLK_LSHIFT = 304
+    SDLK_LSHIFT = 304,
+    SDLK_RCTRL = 305,
+    SDLK_LCTRL = 306
 } SDLKey;
 
 typedef enum {
diff --git a/mods/CMakeLists.txt b/mods/CMakeLists.txt
index d6e16b0..6b2e074 100644
--- a/mods/CMakeLists.txt
+++ b/mods/CMakeLists.txt
@@ -25,7 +25,7 @@ if(MCPI_SERVER_MODE)
     add_library(server SHARED src/server/server.cpp src/server/server_properties.cpp)
     target_link_libraries(server reborn symbols feature home compat version dl media-layer-core pthread)
 else()
-    target_link_libraries(compat input sign chat home dl)
+    target_link_libraries(compat input sign chat home misc dl)
 
     target_link_libraries(chat input)
 
diff --git a/mods/src/compat/compat.c b/mods/src/compat/compat.c
index 5c2e0e8..fdb2100 100644
--- a/mods/src/compat/compat.c
+++ b/mods/src/compat/compat.c
@@ -14,6 +14,7 @@
 #include "../sign/sign.h"
 #include "../chat/chat.h"
 #include "../home/home.h"
+#include "../misc/misc.h"
 
 // Custom Title
 HOOK(SDL_WM_SetCaption, void, (__attribute__((unused)) const char *title, const char *icon)) {
@@ -77,6 +78,16 @@ HOOK(SDL_PollEvent, int, (SDL_Event *event)) {
                     // Drop Item
                     input_drop((event->key.keysym.mod & KMOD_CTRL) != 0);
                     handled = 1;
+                } else if (event->key.keysym.sym == SDLK_LCTRL || event->key.keysym.sym == SDLK_RCTRL) {
+                    // Sprinting
+                    misc_set_sprinting(1);
+                }
+                break;
+            }
+            case SDL_KEYUP: {
+                if (event->key.keysym.sym == SDLK_LCTRL || event->key.keysym.sym == SDLK_RCTRL) {
+                    // Sprinting
+                    misc_set_sprinting(0);
                 }
                 break;
             }
diff --git a/mods/src/misc/misc.c b/mods/src/misc/misc.c
index 3a936cc..c5cfbb2 100644
--- a/mods/src/misc/misc.c
+++ b/mods/src/misc/misc.c
@@ -117,6 +117,28 @@ static unsigned char *RakNetInstance_injection(unsigned char *rak_net_instance)
     return result;
 }
 
+// Increase Player Speed
+static int is_sprinting = 0;
+void misc_set_sprinting(int enable) {
+    is_sprinting = enable;
+}
+static float get_sprint_speed() {
+    static float speed;
+    static int speed_set = 0;
+    if (!speed_set) {
+        char *speed_str = getenv("MCPI_SPEED_HACK");
+        if (speed_str == NULL) {
+            speed_str = "1.5";
+        }
+        speed = strtof(speed_str, NULL);
+        speed_set = 1;
+    }
+    return speed;
+}
+static float Player_getWalkingSpeedModifier_injection(__attribute__((unused)) unsigned char *player) {
+    return is_sprinting ? get_sprint_speed() : 1; // Default Is 1
+}
+
 // Init
 void init_misc() {
     if (feature_has("Remove Invalid Item Background", 0)) {
@@ -144,6 +166,9 @@ void init_misc() {
     // Fix Bug Where RakNetInstance Starts Pinging Potential Servers Before The "Join Game" Screen Is Opened
     overwrite_calls((void *) RakNetInstance, (void *) RakNetInstance_injection);
 
+    // Increase Player Speed
+    overwrite((void *) Player_getWalkingSpeedModifier, (void *) Player_getWalkingSpeedModifier_injection);
+
     // Init C++
     _init_misc_cpp();
 }
diff --git a/mods/src/misc/misc.h b/mods/src/misc/misc.h
index a2d89bf..ee363a6 100644
--- a/mods/src/misc/misc.h
+++ b/mods/src/misc/misc.h
@@ -6,6 +6,8 @@ extern "C" {
 
 __attribute__((visibility("internal"))) void _init_misc_cpp();
 
+void misc_set_sprinting(int enable);
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/scripts/ci/simulate.sh b/scripts/ci/simulate.sh
index a86c2e7..7782226 100755
--- a/scripts/ci/simulate.sh
+++ b/scripts/ci/simulate.sh
@@ -3,4 +3,4 @@
 set -e
 
 # Run
-docker run --rm -v "$(pwd):/data" debian:bullseye sh -c "cd /data; ./scripts/ci/run.sh"
+docker run --rm -v "$(pwd):/data" debian:buster sh -c "cd /data; ./scripts/ci/run.sh"
